name: dev
on:
  push:
    branches: [release, develop]
  workflow_dispatch:
env:
  BUILD: Herodotus
  VERSION: 0.3.0

jobs:
  FTBQuestsProcessor:
    if: "!endsWith(github.ref, 'release')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Run FTB Quests lang processor
        run: python runners/ftbq_lang_processor.py

      - name: Commit processor changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: friendlyhj
          author_email: youyi580@qq.com
          message: "ftbq lang processor changes (github action)"
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}

  CreateCursePack:
    if: "!endsWith(github.event.head_commit.message, 'NOCLIENT') && endsWith(github.ref, 'develop')"
    runs-on: ubuntu-latest
    needs: FTBQuestsProcessor
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Close Debug Mode
        run: python runners/close_debug.py

      - name: Run version.py
        run: python runners/version.py

      - name: Run build.sh
        run: bash runners/build.sh

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD }}-${{ env.VERSION }}.${{ github.run_number }}
          path: artifacts

  CreateServerPack:
    if: "endsWith(github.event.head_commit.message, 'CREATESERVER') && endsWith(github.ref, 'release')"
    runs-on: ubuntu-latest
    needs: FTBQuestsProcessor
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Close Debug Mode
        run: python runners/close_debug.py

      - name: Run version.py
        run: python runners/version.py

      - name: Install server
        run: |
          mkdir ${GITHUB_WORKSPACE}/server
          wget https://maven.minecraftforge.net/net/minecraftforge/forge/1.12.2-14.23.5.2860/forge-1.12.2-14.23.5.2860-installer.jar -O ${GITHUB_WORKSPACE}/server/forge-1.12.2-14.23.5.2860-installer.jar
          cd ./server
          sudo java -jar forge-1.12.2-14.23.5.2860-installer.jar --installServer
          sudo rm forge-1.12.2-14.23.5.2860-installer.jar
          sudo rm forge-1.12.2-14.23.5.2860-installer.jar.log

      - name: Setup server files
        run: |
          mv ${GITHUB_WORKSPACE}/.minecraft/mods ${GITHUB_WORKSPACE}/server/
          mv ${GITHUB_WORKSPACE}/.minecraft/config ${GITHUB_WORKSPACE}/server/
          mv ${GITHUB_WORKSPACE}/.minecraft/scripts ${GITHUB_WORKSPACE}/server/
          mv ${GITHUB_WORKSPACE}/.minecraft/resources ${GITHUB_WORKSPACE}/server/
          mv ${GITHUB_WORKSPACE}/.minecraft/icon.png ${GITHUB_WORKSPACE}/server/
          mv ${GITHUB_WORKSPACE}/runners/server/start.bat ${GITHUB_WORKSPACE}/server/
          mv ${GITHUB_WORKSPACE}/runners/server/start.sh ${GITHUB_WORKSPACE}/server/

      - name: Download Modpack Downloader CLI
        run: |
          mkdir ${GITHUB_WORKSPACE}/downloader
          wget https://github.com/Nincraft/ModPackDownloader/releases/download/0.6.1/ModpackDownloader-cli-0.6.1.jar -O ${GITHUB_WORKSPACE}/downloader/ModpackDownloader-cli-0.6.1.jar

      - name: Download Mods
        run: sudo ${JAVA_HOME_11_X64}/bin/java -jar ${GITHUB_WORKSPACE}/downloader/ModpackDownloader-cli-0.6.1.jar -manifest ${GITHUB_WORKSPACE}/manifest.json -folder ${GITHUB_WORKSPACE}/server/mods

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD }}-${{ env.VERSION }}.${{ github.run_number }} Server
          path: server

  UpdateVersionJson:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.GITEE_SSH_KEY }}
          known_hosts: ${{ secrets.GITEE_SSH_HOST }}

      - name: Update Version Json
        run: |
          git clone git@gitee.com:ProjectHDS/HDSVersioning.git
          cd ./HDSVersioning
          git config user.name GBLodb
          git config user.email garybluis@outlook.com
          python update_version.py
          git add .
          git commit -m "Update Version ${{ env.VERSION }}.${{ github.run_number }}"
          git push
  
  TagAndRelease:
    if: "endsWith(github.ref, 'release')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Commit tagger
        uses: tvdias/github-tagger@v0.0.2
        with:
          repo-token: "${{ secrets.ACTION_TOKEN }}"
          tag: v${{ env.VERSION }}.${{ github.run_number }}

      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Close Debug Mode
        run: python runners/close_debug.py

      - name: Run version.py
        run: python runners/version.py

      - name: pack for release asset
        run: |
          cd ${GITHUB_WORKSPACE}
          mv .minecraft overrides
          zip -r "${{ env.BUILD }}-${{ env.VERSION }}.${{ github.run_number }}.zip" -xi manifest.json modlist.html overrides

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          name: v${{ env.VERSION }}.${{ github.run_number }}
          tag_name: v${{ env.VERSION }}.${{ github.run_number }}
          files: "${{ env.BUILD }}-${{ env.VERSION }}.${{ github.run_number }}.zip"
